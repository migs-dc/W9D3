{"version":3,"sources":["./frontend/api_util.js","./frontend/follow_toggle.js","webpack/bootstrap","./frontend/twitter.js"],"names":[],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;AAEA;AACA;AACA,qBAAqB,GAAG;AACxB;AACA;AACA,KAAK;AACL;;AAEA;;AAEA,yB;;;;;;;;;;AChBA,gBAAgB,mBAAO,CAAC,0CAAY;;AAEpC;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,8B;;;;;;UCzDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,qBAAqB,mBAAO,CAAC,oDAAiB;;AAE9C;AACA,sEAAsE;AACtE;AACA,CAAC,C","file":"bundle.js","sourcesContent":["const APIUtil = {\r\n\r\n  followUser: id => APIUtil.changeFollowStatus(id, 'POST'),\r\n\r\n  unfollowUser: id => APIUtil.changeFollowStatus(id, 'DELETE'),\r\n\r\n  changeFollowStatus: (id, method) => (\r\n    $.ajax({\r\n      url: `/users/${id}/follow`,\r\n      dataType: 'json',\r\n      method\r\n    })\r\n  )\r\n\r\n};\r\n\r\nmodule.exports = APIUtil;","const APIUtil = require(\"./api_util\");\r\n\r\nclass FollowToggle {\r\n  constructor(el, options){ //what exactly are options\r\n    this.$el = $(el);\r\n    this.userId = this.$el.data('user-id') || options.userId;\r\n    this.followState = (this.$el.data('initial-follow-state') || options.followState);\r\n    this.render();\r\n    this.$el.on('click', this.handleClick.bind(this));\r\n    // this.$el.on('click', this.handleClick);\r\n  }\r\n\r\n  render() {\r\n    switch (this.followState) {\r\n      case 'unfollowed':\r\n        this.$el.prop('disabled', false);\r\n        this.$el.html('Follow!');\r\n        break;\r\n      case 'followed':\r\n        this.$el.prop('disabled', false);\r\n        this.$el.html('Unfollow!');\r\n        break;\r\n      case 'following':\r\n        this.$el.prop('disabled', true);\r\n        this.$el.html('Following...');\r\n        break;\r\n      case 'unfollowing':\r\n        this.$el.prop('disabled', true);\r\n        this.$el.html('Unfollowing...');\r\n        break;\r\n    }\r\n  }\r\n\r\n  handleClick(e) {\r\n    // debugger\r\n    const followToggle = this;\r\n\r\n    e.preventDefault();\r\n\r\n    if (this.followState === 'followed') {\r\n      this.followState = 'unfollowing';\r\n      this.render();\r\n      APIUtil.unfollowUser(this.userId).then(() => {\r\n        followToggle.followState = 'unfollowed';\r\n        followToggle.render();\r\n      });\r\n    } else if (this.followState === 'unfollowed') {\r\n      this.followState = 'following';\r\n      this.render();\r\n      APIUtil.followUser(this.userId).then(() => {\r\n        followToggle.followState = 'followed';\r\n        followToggle.render();\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = FollowToggle;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const FollowToggle = require('./follow_toggle');\r\n\r\n$(function (){\r\n  $('button.follow-toggle').each( (i, btn) => new FollowToggle(btn, {}) );\r\n$('.users-search').each((i, search) => new UsersSearch(search));\r\n})"],"sourceRoot":""}